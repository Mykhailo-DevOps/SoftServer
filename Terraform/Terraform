provider "aws" {
  region = "eu-west-3"
}

resource "aws_instance" "My-Ubuntu" {
  ami           = "ami-087855b6c8b59a9e4"
  instance_type = "t2.micro"

  tags = {
    Name    = "My Ubuntu Server"
    Owner   = "Mykhailo Kolodiy"
    Project = "Lesson-1 Terraform Ubuntu"
  }
}

resource "aws_instance" "My-Linux" {
  ami           = "ami-0652eb0db9b20aeaf"
  instance_type = "t2.micro"

  tags = {
    Name    = "My Amazon Server"
    Owner   = "Mykhailo Kolodiy"
    Project = "Lesson-1 Terraform"


#------------------------
# My terraform_remote_state
#
# Build WebServer during Bootsrap



provider "aws" {
  region = "eu-west-3"
}

resource "aws_instance" "my_webserver" {
  ami                    = "ami-0652eb0db9b20aeaf" # Amazon Linux AMI
  instance_type          = "t2.micro"
  vpc_security_group_ids = [aws_security_group.my_webserver.id]
  user_data              = <<EOF
#!/bin/bash
yum -y update
yum -y install httpd
myip=`curl http://169.254.169.254/latest/meta-data/local-ipv4`
echo "<h2>WebServer with IP: $myip</h2><br>Build by Terraform!" > /var/www/html/index.html
sudo service httpd start
chkconfig httpd on
EOF
  tags = {
    Name  = " Web Server Build by Terraform"
    Owner = "Mykhailo Kolodiy"
  }
}

resource "aws_security_group" "my_webserver" {
  name        = "WebServer Security Group"
  description = "My First SecurityGroup"

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  tags = {
    Name  = " Web Server Security group"
    Owner = "Mykhailo Kolodiy"
  }

}


#------------------------
# My terraform_remote_state
#
# Build WebServer during Bootsrap



provider "aws" {
  region = "eu-west-3"
}

resource "aws_instance" "my_webserver" {
  ami                    = "ami-0652eb0db9b20aeaf" # Amazon Linux AMI
  instance_type          = "t2.micro"
  vpc_security_group_ids = [aws_security_group.my_webserver.id]
  user_data              = file("user_data.sh") # user_data.sh this is a script that is written from above

  tags = {
    Name  = " Web Server Build by Terraform"
    Owner = "Mykhailo Kolodiy"
  }
}

resource "aws_security_group" "my_webserver" {
  name        = "WebServer Security Group"
  description = "My First SecurityGroup"

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  tags = {
    Name  = " Web Server Security group"
    Owner = "Mykhailo Kolodiy"
  }

}
